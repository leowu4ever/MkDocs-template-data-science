{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"mkdocs-template","text":"<p>This repo is created to demonstrate how I put together a documentation in MkDocs with several essential components.</p>"},{"location":"#steps-to-set-up-mkdocs","title":"Steps to set up MkDocs","text":"<ul> <li>pip install mkdocs</li> <li>Mkdocs new . (to create docs folder for MkDocs)</li> <li>pip install mkdocstrings  </li> <li>pip install 'mkdocstrings[python]' ??? not sure</li> <li>pip install mkdocs-include-markdown-plugin</li> </ul>"},{"location":"#documentation-structure","title":"Documentation structure","text":"<pre><code>%%{init: {'theme':'default'}}%%\nflowchart\nsubgraph readme\nmermaid[mermaid diagram]\nend\ndocstring[Docstrings]\ndemo[Demo notebooks]\ndoc[MkDocs documentation]\n\nreadme --mkdocs-include &amp; mkdocs-mermaid--&gt; doc\ndocstring --mkdocstrings--&gt; doc\ndemo --mkdocs-jupyter--&gt; doc\n</code></pre>"},{"location":"car/","title":"Car","text":""},{"location":"car/#src.car.Car","title":"<code>Car</code>","text":"<p>         Bases: <code>Vehicle</code></p> <p>A car class which inherits from Vehicle.</p> Source code in <code>src/car.py</code> <pre><code>class Car(Vehicle):\n'''\n    A car class which inherits from Vehicle.\n    '''\n    def __init__(self, num_of_wheels: int, brand: str):\n'''\n        Initialise a car with the given number of wheels.\n\n        Args:\n            num_of_wheels (int): the number of wheels a vehicle has\n        '''\n        super().__init__(num_of_wheels)\n        self._brand = brand\n\n\n    @property\n    def brand(self) -&gt; str:\n'''\n        Return the brand of the car.\n\n        Returns:\n            str: the brand of the car\n        '''\n        return self._brand\n</code></pre>"},{"location":"car/#src.car.Car.brand","title":"<code>brand: str</code>  <code>property</code>","text":"<p>Return the brand of the car.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>the brand of the car</p>"},{"location":"car/#src.car.Car.__init__","title":"<code>__init__(num_of_wheels, brand)</code>","text":"<p>Initialise a car with the given number of wheels.</p> <p>Parameters:</p> Name Type Description Default <code>num_of_wheels</code> <code>int</code> <p>the number of wheels a vehicle has</p> required Source code in <code>src/car.py</code> <pre><code>def __init__(self, num_of_wheels: int, brand: str):\n'''\n    Initialise a car with the given number of wheels.\n\n    Args:\n        num_of_wheels (int): the number of wheels a vehicle has\n    '''\n    super().__init__(num_of_wheels)\n    self._brand = brand\n</code></pre>"},{"location":"vehicle/","title":"Vehicle","text":""},{"location":"vehicle/#src.vehicle.Vehicle","title":"<code>Vehicle</code>","text":"<p>This is a vehicle class. It has a number of wheels.</p> Source code in <code>src/vehicle.py</code> <pre><code>class Vehicle():\n'''\n    This is a vehicle class. It has a number of wheels.\n    '''\n\n    def __init__(self, num_of_wheels: int):\n'''\n        To initialise a vehicle by supplying the number of wheels\n\n        Args:\n            num_of_wheels (int): number of wheels a vehicle has\n        '''\n        self._num_of_wheels = num_of_wheels\n\n    @property\n    def num_of_wheels(self) -&gt; int:\n'''\n        To access the number of wheels a vehicle can have\n\n        Returns:\n            int: the number of wheels specified\n        '''\n        return self._num_of_wheels\n</code></pre>"},{"location":"vehicle/#src.vehicle.Vehicle.num_of_wheels","title":"<code>num_of_wheels: int</code>  <code>property</code>","text":"<p>To access the number of wheels a vehicle can have</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>the number of wheels specified</p>"},{"location":"vehicle/#src.vehicle.Vehicle.__init__","title":"<code>__init__(num_of_wheels)</code>","text":"<p>To initialise a vehicle by supplying the number of wheels</p> <p>Parameters:</p> Name Type Description Default <code>num_of_wheels</code> <code>int</code> <p>number of wheels a vehicle has</p> required Source code in <code>src/vehicle.py</code> <pre><code>def __init__(self, num_of_wheels: int):\n'''\n    To initialise a vehicle by supplying the number of wheels\n\n    Args:\n        num_of_wheels (int): number of wheels a vehicle has\n    '''\n    self._num_of_wheels = num_of_wheels\n</code></pre>"},{"location":"notebooks/car_demo/","title":"Car class demo","text":"In\u00a0[1]: Copied! <pre>from car import Car\n\nfancy_car = Car(num_of_wheels=6, brand='POSH')\nprint(f'My fancy {fancy_car.brand} car has {fancy_car.num_of_wheels} wheels')\n</pre> from car import Car  fancy_car = Car(num_of_wheels=6, brand='POSH') print(f'My fancy {fancy_car.brand} car has {fancy_car.num_of_wheels} wheels') <pre>My fancy POSH car has 6 wheels\n</pre>"},{"location":"notebooks/car_demo/#car-class-demo","title":"Car class demo\u00b6","text":"<p>In this notebook, I show you how to get the brand and the number of wheels of a car created.</p>"}]}